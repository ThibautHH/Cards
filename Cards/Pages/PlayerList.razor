@using Cards.Data
@using Cards.Data.Game
@using Cards.Server.Clients
@using Cards.Server.Hubs
@using Microsoft.AspNetCore.SignalR
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IPlayerListClient
@implements IAsyncDisposable

<div class="form-group">
    <label>
        Number of players: @this.players.Count
    </label>
</div>

<hr />

<ul id="playerList">
    @foreach (Player player in this.players)
    {

        <li>@player.Name | @(player.Ready ? string.Empty : "Not ")Ready</li>
    }
</ul>

@code {
    public HubConnection hubConnection = null!;
    public IList<Player> players = new List<Player>();

    [Parameter]
    public Data.Game.Game Game { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/Hubs/PlayerList"))
            .Build();
        this.hubConnection.On<IList<Player>>("Update", this.Update);
        await this.hubConnection.StartAsync();
        await this.hubConnection.InvokeAsync("EnterLobby", this.Game);
    }

    public Task Update(IList<Player> playerList)
    {
        this.players = playerList;
        this.StateHasChanged();
        return Task.CompletedTask;
    }

    public async ValueTask DisposeAsync()
    {
        if (this.hubConnection is not null)
            await this.hubConnection.DisposeAsync();
    }
}