@page "/tarot"
@using Cards.ComponentBase
@using Cards.Data
@using Cards.Data.Game.TrickGame
@using Cards.Pages.Game
@using Cards.Server.Clients
@using Cards.Server.Hubs
@using Cards.Services
@using Microsoft.AspNetCore.SignalR.Client
@inherits TrickGameBase<TarotTeam>
@if (!this.inGame)
{
    <h3>Tarot</h3>

    <PlayerList GameName="@this.GameName" @ref="this.playerList"/>
    <AuthorizeView>
        <Authorized>
            @if (!this.IsPlaying)
            {
                <button class="btn btn-primary" @onclick="this.Play">Play</button>
            } else 
            {
                if (!this.IsReady)
                {
                    <button class="btn btn-primary" @onclick="this.Ready">Ready</button>
                } else
                {
                    <button class="btn btn-primary" @onclick="this.Unready">Unready</button>
                    if (this.IsHost && this.playerList!.hubConnection.InvokeAsync<bool>("IsGameReady", this.GameName).GetAwaiter().GetResult())
                    {
                        <button class="btn btn-primary" @onclick="this.Launch">Launch</button>
                    }
                }
                <button class="btn btn-primary" @onclick="this.Quit">Quit</button>
            }
        </Authorized>
        <NotAuthorized>
            <div class="tooltip">
                <button class="btn btn-primary" disabled>Play</button>
                <span class="tooltiptext requires-authentication" />
            </div>
        </NotAuthorized>
    </AuthorizeView>
} else
{
    <Hand @ref="this.hand"/>
}

@code {
    protected override string GameName => "Tarot";

    protected override IList<TarotTeam> Teams { get; init; } = new List<TarotTeam>();

    protected override void Launch()
    {
        this.inGame = true;
        StateHasChanged();
    }
}